{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sdsan\\\\Desktop\\\\React\\\\myapplication\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [configuration, setConfiguration] = useState({\n    totalTickets: \"\",\n    ticketReleaseRate: \"\",\n    customerRetrievalRate: \"\",\n    maxTicketCapacity: \"\"\n  });\n  const [savedConfig, setSavedConfig] = useState(null);\n  const [ticketDetails, setTicketDetails] = useState({\n    totalTickets: 0,\n    maxTickets: 0,\n    soldTickets: 0,\n    remainingTickets: 0\n  });\n  const [systemStatus, setSystemStatus] = useState(\"Stopped\");\n  const BASE_URL = \"http://localhost:5002\";\n\n  // Handle input changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Validate input: only positive numbers or empty\n    if (value === \"\" || /^\\d+$/.test(value)) {\n      setConfiguration({\n        ...configuration,\n        [name]: value\n      });\n    } else {\n      alert(\"Please enter a valid positive number.\");\n    }\n  };\n\n  // Handle configuration submission\n  const handleConfigure = async () => {\n    const totalTickets = parseInt(configuration.totalTickets, 10);\n    const ticketReleaseRate = parseInt(configuration.ticketReleaseRate, 10);\n    const customerRetrievalRate = parseInt(configuration.customerRetrievalRate, 10);\n    const maxTicketCapacity = parseInt(configuration.maxTicketCapacity, 10);\n    if (!totalTickets || !ticketReleaseRate || !customerRetrievalRate || !maxTicketCapacity) {\n      alert(\"Please fill all fields!\");\n      return;\n    }\n    if (maxTicketCapacity <= 0 || maxTicketCapacity > totalTickets) {\n      alert(\"Max Ticket Capacity must be greater than 0 and less than or equal to Total Tickets.\");\n      return;\n    }\n    try {\n      const response = await fetch(`${BASE_URL}/api/configure`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          totalTickets,\n          ticketReleaseRate,\n          customerRetrievalRate,\n          maxTicketCapacity\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setSavedConfig(configuration);\n        setTicketDetails({\n          totalTickets,\n          maxTickets: maxTicketCapacity,\n          soldTickets: 0,\n          remainingTickets: totalTickets\n        });\n        setSystemStatus(\"Stopped\");\n        alert(result.message);\n      } else {\n        alert(result.message);\n      }\n    } catch (error) {\n      console.error(\"Error configuring system:\", error);\n      alert(\"Failed to configure the system. Please try again.\");\n    }\n  };\n\n  // Handle system start\n  const handleStart = async () => {\n    if (!savedConfig) {\n      alert(\"Please configure the system first!\");\n      return;\n    }\n    try {\n      const response = await fetch(`${BASE_URL}/api/start`, {\n        method: \"POST\"\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setSystemStatus(\"Running\");\n        alert(result.message);\n      } else {\n        alert(result.message);\n      }\n    } catch (error) {\n      console.error(\"Error starting system:\", error);\n      alert(\"Failed to start the system. Please try again.\");\n    }\n  };\n\n  // Handle system stop\n  const handleStop = async () => {\n    try {\n      const response = await fetch(`${BASE_URL}/api/stop`, {\n        method: \"POST\"\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setSystemStatus(\"Stopped\");\n        alert(result.message);\n      } else {\n        alert(result.message);\n      }\n    } catch (error) {\n      console.error(\"Error stopping system:\", error);\n      alert(\"Failed to stop the system. Please try again.\");\n    }\n  };\n\n  // Fetch ticket details when system is running\n  useEffect(() => {\n    let intervalId;\n    if (systemStatus === \"Running\") {\n      intervalId = setInterval(async () => {\n        try {\n          const response = await fetch(`${BASE_URL}/api/status`);\n          const result = await response.json();\n          if (response.ok) {\n            setTicketDetails({\n              totalTickets: result.totalTickets,\n              maxTickets: result.maxCapacity,\n              soldTickets: result.ticketsSold,\n              remainingTickets: result.remainingTickets\n            });\n          }\n        } catch (error) {\n          console.error(\"Error fetching ticket details:\", error);\n        }\n      }, 1000);\n    }\n    return () => clearInterval(intervalId);\n  }, [systemStatus]);\n\n  // Handle reset button\n  const handleReset = async () => {\n    try {\n      const response = await fetch(`${BASE_URL}/api/reset`, {\n        method: \"POST\"\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setConfiguration({\n          totalTickets: \"\",\n          ticketReleaseRate: \"\",\n          customerRetrievalRate: \"\",\n          maxTicketCapacity: \"\"\n        });\n        setSavedConfig(null);\n        setSystemStatus(\"Stopped\");\n        alert(result.message);\n      } else {\n        alert(result.message);\n      }\n    } catch (error) {\n      console.error(\"Error resetting system:\", error);\n      alert(\"Failed to reset the system. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: \"Real-Time Ticketing System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"totalTickets\",\n          value: configuration.totalTickets,\n          onChange: handleChange,\n          placeholder: \"Total Tickets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"ticketReleaseRate\",\n          value: configuration.ticketReleaseRate,\n          onChange: handleChange,\n          placeholder: \"Ticket Release Rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"customerRetrievalRate\",\n          value: configuration.customerRetrievalRate,\n          onChange: handleChange,\n          placeholder: \"Customer Retrieval Rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"maxTicketCapacity\",\n          value: configuration.maxTicketCapacity,\n          onChange: handleChange,\n          placeholder: \"Max Ticket Capacity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfigure,\n          children: \"Configure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"System Control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStart,\n          disabled: systemStatus === \"Running\",\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStop,\n          disabled: systemStatus === \"Stopped\",\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", systemStatus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Ticketing Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Tickets: \", ticketDetails.totalTickets]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Max Tickets: \", ticketDetails.maxTickets]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sold Tickets: \", ticketDetails.soldTickets]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Remaining Tickets: \", ticketDetails.remainingTickets]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"80pR1Bt7z3dpqiKBkuw72p2YCo4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","configuration","setConfiguration","totalTickets","ticketReleaseRate","customerRetrievalRate","maxTicketCapacity","savedConfig","setSavedConfig","ticketDetails","setTicketDetails","maxTickets","soldTickets","remainingTickets","systemStatus","setSystemStatus","BASE_URL","handleChange","e","name","value","target","test","alert","handleConfigure","parseInt","response","fetch","method","headers","body","JSON","stringify","result","json","ok","message","error","console","handleStart","handleStop","intervalId","setInterval","maxCapacity","ticketsSold","clearInterval","handleReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/sdsan/Desktop/React/myapplication/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [configuration, setConfiguration] = useState({\n    totalTickets: \"\",\n    ticketReleaseRate: \"\",\n    customerRetrievalRate: \"\",\n    maxTicketCapacity: \"\",\n  });\n\n  const [savedConfig, setSavedConfig] = useState(null);\n  const [ticketDetails, setTicketDetails] = useState({\n    totalTickets: 0,\n    maxTickets: 0,\n    soldTickets: 0,\n    remainingTickets: 0,\n  });\n\n  const [systemStatus, setSystemStatus] = useState(\"Stopped\");\n\n  const BASE_URL = \"http://localhost:5002\";\n\n  // Handle input changes\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    // Validate input: only positive numbers or empty\n    if (value === \"\" || /^\\d+$/.test(value)) {\n      setConfiguration({ ...configuration, [name]: value });\n    } else {\n      alert(\"Please enter a valid positive number.\");\n    }\n  };\n\n  // Handle configuration submission\n  const handleConfigure = async () => {\n    const totalTickets = parseInt(configuration.totalTickets, 10);\n    const ticketReleaseRate = parseInt(configuration.ticketReleaseRate, 10);\n    const customerRetrievalRate = parseInt(configuration.customerRetrievalRate, 10);\n    const maxTicketCapacity = parseInt(configuration.maxTicketCapacity, 10);\n\n    if (!totalTickets || !ticketReleaseRate || !customerRetrievalRate || !maxTicketCapacity) {\n      alert(\"Please fill all fields!\");\n      return;\n    }\n\n    if (maxTicketCapacity <= 0 || maxTicketCapacity > totalTickets) {\n      alert(\"Max Ticket Capacity must be greater than 0 and less than or equal to Total Tickets.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(`${BASE_URL}/api/configure`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          totalTickets,\n          ticketReleaseRate,\n          customerRetrievalRate,\n          maxTicketCapacity,\n        }),\n      });\n\n      const result = await response.json();\n\n      if (response.ok) {\n        setSavedConfig(configuration);\n        setTicketDetails({\n          totalTickets,\n          maxTickets: maxTicketCapacity,\n          soldTickets: 0,\n          remainingTickets: totalTickets,\n        });\n        setSystemStatus(\"Stopped\");\n        alert(result.message);\n      } else {\n        alert(result.message);\n      }\n    } catch (error) {\n      console.error(\"Error configuring system:\", error);\n      alert(\"Failed to configure the system. Please try again.\");\n    }\n  };\n\n  // Handle system start\n  const handleStart = async () => {\n    if (!savedConfig) {\n      alert(\"Please configure the system first!\");\n      return;\n    }\n\n    try {\n      const response = await fetch(`${BASE_URL}/api/start`, { method: \"POST\" });\n      const result = await response.json();\n\n      if (response.ok) {\n        setSystemStatus(\"Running\");\n        alert(result.message);\n      } else {\n        alert(result.message);\n      }\n    } catch (error) {\n      console.error(\"Error starting system:\", error);\n      alert(\"Failed to start the system. Please try again.\");\n    }\n  };\n\n  // Handle system stop\n  const handleStop = async () => {\n    try {\n      const response = await fetch(`${BASE_URL}/api/stop`, { method: \"POST\" });\n      const result = await response.json();\n\n      if (response.ok) {\n        setSystemStatus(\"Stopped\");\n        alert(result.message);\n      } else {\n        alert(result.message);\n      }\n    } catch (error) {\n      console.error(\"Error stopping system:\", error);\n      alert(\"Failed to stop the system. Please try again.\");\n    }\n  };\n\n  // Fetch ticket details when system is running\n  useEffect(() => {\n    let intervalId;\n    if (systemStatus === \"Running\") {\n      intervalId = setInterval(async () => {\n        try {\n          const response = await fetch(`${BASE_URL}/api/status`);\n          const result = await response.json();\n          if (response.ok) {\n            setTicketDetails({\n              totalTickets: result.totalTickets,\n              maxTickets: result.maxCapacity,\n              soldTickets: result.ticketsSold,\n              remainingTickets: result.remainingTickets,\n            });\n          }\n        } catch (error) {\n          console.error(\"Error fetching ticket details:\", error);\n        }\n      }, 1000);\n    }\n    return () => clearInterval(intervalId);\n  }, [systemStatus]);\n\n  // Handle reset button\n  const handleReset = async () => {\n    try {\n      const response = await fetch(`${BASE_URL}/api/reset`, { method: \"POST\" });\n      const result = await response.json();\n\n      if (response.ok) {\n        setConfiguration({\n          totalTickets: \"\",\n          ticketReleaseRate: \"\",\n          customerRetrievalRate: \"\",\n          maxTicketCapacity: \"\",\n        });\n        setSavedConfig(null);\n        setSystemStatus(\"Stopped\");\n        alert(result.message);\n      } else {\n        alert(result.message);\n      }\n    } catch (error) {\n      console.error(\"Error resetting system:\", error);\n      alert(\"Failed to reset the system. Please try again.\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">Real-Time Ticketing System</header>\n      <div className=\"App-body\">\n        <div className=\"box\">\n          <h2>Configuration</h2>\n          <input\n            type=\"text\"\n            name=\"totalTickets\"\n            value={configuration.totalTickets}\n            onChange={handleChange}\n            placeholder=\"Total Tickets\"\n          />\n          <input\n            type=\"text\"\n            name=\"ticketReleaseRate\"\n            value={configuration.ticketReleaseRate}\n            onChange={handleChange}\n            placeholder=\"Ticket Release Rate\"\n          />\n          <input\n            type=\"text\"\n            name=\"customerRetrievalRate\"\n            value={configuration.customerRetrievalRate}\n            onChange={handleChange}\n            placeholder=\"Customer Retrieval Rate\"\n          />\n          <input\n            type=\"text\"\n            name=\"maxTicketCapacity\"\n            value={configuration.maxTicketCapacity}\n            onChange={handleChange}\n            placeholder=\"Max Ticket Capacity\"\n          />\n          <button onClick={handleConfigure}>Configure</button>\n        </div>\n        <div className=\"box\">\n          <h2>System Control</h2>\n          <button onClick={handleStart} disabled={systemStatus === \"Running\"}>\n            Start\n          </button>\n          <button onClick={handleStop} disabled={systemStatus === \"Stopped\"}>\n            Stop\n          </button>\n          <button onClick={handleReset}>Reset</button>\n          <p>Status: {systemStatus}</p>\n        </div>\n        <div className=\"box\">\n          <h2>Ticketing Details</h2>\n          <p>Total Tickets: {ticketDetails.totalTickets}</p>\n          <p>Max Tickets: {ticketDetails.maxTickets}</p>\n          <p>Sold Tickets: {ticketDetails.soldTickets}</p>\n          <p>Remaining Tickets: {ticketDetails.remainingTickets}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}